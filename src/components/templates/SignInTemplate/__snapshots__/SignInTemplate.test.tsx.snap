// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignInTemplate should render correctly 1`] = `
<View
  style={
    {
      "flex": 1,
      "gap": 25,
      "justifyContent": "center",
      "paddingHorizontal": 20,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1B1D4D",
          "fontFamily": "MulishRegular",
          "fontSize": 16,
        },
        {
          "fontFamily": "MulishBold",
          "fontSize": 44,
          "textAlign": "center",
        },
      ]
    }
  >
    Welcome to MoneyBay!
  </Text>
  <View
    style={
      [
        {
          "backgroundColor": "white",
          "borderRadius": 10,
          "height": "auto",
          "padding": 10,
          "width": "100%",
        },
        {
          "elevation": 20,
          "shadowColor": "#16196670",
          "shadowOffset": {
            "height": 6,
            "width": 0,
          },
          "shadowOpacity": 0.08,
          "shadowRadius": 16,
        },
        [
          {
            "alignItems": "center",
            "borderColor": "white",
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 14,
          },
          undefined,
          false,
        ],
      ]
    }
    testID="universal-container"
  >
    <TextInput
      keyboardType="default"
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Email"
      placeholderTextColor="#868698"
      secureTextEntry={false}
      style={
        [
          {
            "color": "white",
            "fontFamily": "MulishRegular",
          },
          {
            "color": "#1B1D4D",
            "marginRight": 10,
            "maxWidth": "93%",
            "width": "100%",
          },
          undefined,
          {
            "maxWidth": "100%",
          },
        ]
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={10}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "display": "none",
        }
      }
      testID="input-icon"
    >
      <Text />
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "white",
          "borderRadius": 10,
          "height": "auto",
          "padding": 10,
          "width": "100%",
        },
        {
          "elevation": 20,
          "shadowColor": "#16196670",
          "shadowOffset": {
            "height": 6,
            "width": 0,
          },
          "shadowOpacity": 0.08,
          "shadowRadius": 16,
        },
        [
          {
            "alignItems": "center",
            "borderColor": "white",
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 14,
          },
          undefined,
          false,
        ],
      ]
    }
    testID="universal-container"
  >
    <TextInput
      keyboardType="default"
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Password"
      placeholderTextColor="#868698"
      secureTextEntry={true}
      style={
        [
          {
            "color": "white",
            "fontFamily": "MulishRegular",
          },
          {
            "color": "#1B1D4D",
            "marginRight": 10,
            "maxWidth": "93%",
            "width": "100%",
          },
          undefined,
          {
            "maxWidth": "100%",
          },
        ]
      }
      testID="passwordtest"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={10}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "display": "none",
        }
      }
      testID="input-icon"
    >
      <Text />
    </View>
  </View>
  <View
    style={
      {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "gap": 14,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          animatedStyle={
            {
              "value": {
                "backgroundColor": "rgba(0, 0, 0, 0)",
                "borderColor": "rgba(134, 134, 152, 1)",
              },
            }
          }
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 0, 0, 0)",
              "borderColor": "rgba(134, 134, 152, 1)",
              "borderRadius": 4,
              "borderWidth": 1,
              "height": 22,
              "justifyContent": "center",
              "width": 22,
            }
          }
        >
          <View
            animatedStyle={
              {
                "value": {
                  "opacity": 0,
                  "transform": [
                    {
                      "rotateZ": "180deg",
                    },
                  ],
                },
              }
            }
            collapsable={false}
            style={
              {
                "opacity": 0,
                "transform": [
                  {
                    "rotateZ": "180deg",
                  },
                ],
              }
            }
          >
            <Text />
          </View>
        </View>
      </View>
      <Text
        style={
          [
            {
              "color": "#1B1D4D",
              "fontFamily": "MulishRegular",
              "fontSize": 16,
            },
            {
              "color": "#1B1D4D",
              "fontFamily": "MulishRegular",
              "fontSize": 16,
            },
          ]
        }
      >
        Remember me
      </Text>
    </View>
    <Text
      style={
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishRegular",
            "fontSize": 16,
          },
          [
            {
              "color": "#FF5887",
              "fontFamily": "MulishRegular",
              "fontSize": 16,
            },
            {
              "marginLeft": "auto",
            },
          ],
        ]
      }
    >
      Lost your password?
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
        "width": "100%",
      }
    }
  >
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        {
          "colors": [
            4288142079,
            4279654301,
          ],
          "endPoint": [
            1,
            0.5,
          ],
          "locations": undefined,
          "startPoint": [
            0,
            0.5,
          ],
        }
      }
      style={
        [
          {
            "borderRadius": 10,
            "padding": 15,
          },
          false,
          false,
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#1B1D4D",
              "fontFamily": "MulishRegular",
              "fontSize": 16,
            },
            [
              {
                "fontFamily": "MulishSemiBold",
                "fontSize": 16,
                "textAlign": "center",
              },
              {
                "color": "white",
              },
              false,
              false,
            ],
          ]
        }
      >
        Sign in
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
  <View
    style={
      {
        "flexDirection": "row",
        "gap": 5,
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishRegular",
            "fontSize": 16,
          },
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishRegular",
            "fontSize": 16,
          },
        ]
      }
    >
      No account?
    </Text>
    <Text
      style={
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishRegular",
            "fontSize": 16,
          },
          [
            {
              "color": "#FF5887",
              "fontFamily": "MulishRegular",
              "fontSize": 16,
            },
            undefined,
          ],
        ]
      }
    >
      Register now
    </Text>
  </View>
  <View
    style={
      {
        "display": "flex",
        "flexDirection": "row",
        "gap": 10,
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
        }
      }
      collapsable={false}
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
      testID="undefined0"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "padding": 8,
            },
            {
              "backgroundColor": "#3B5999",
              "borderRadius": 49,
              "height": 49,
              "width": 49,
            },
          ]
        }
        testID="pressable-social-button"
      >
        <Text />
      </View>
    </View>
    <View
      animatedStyle={
        {
          "value": {
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
        }
      }
      collapsable={false}
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
      testID="undefined1"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "padding": 8,
            },
            {
              "backgroundColor": "#55ACEE",
              "borderRadius": 49,
              "height": 49,
              "width": 49,
            },
          ]
        }
        testID="pressable-social-button"
      >
        <Text />
      </View>
    </View>
    <View
      animatedStyle={
        {
          "value": {
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
        }
      }
      collapsable={false}
      style={
        {
          "transform": [
            {
              "scale": 1,
            },
          ],
        }
      }
      testID="undefined2"
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "padding": 8,
            },
            {
              "backgroundColor": "#DD4B39",
              "borderRadius": 49,
              "height": 49,
              "width": 49,
            },
          ]
        }
        testID="pressable-social-button"
      >
        <Text />
      </View>
    </View>
  </View>
</View>
`;
