// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewPasswordTemplate should render correctly 1`] = `
<View
  style={
    {
      "gap": 22.9448,
      "padding": 33.45,
    }
  }
>
  <Text
    style={
      {
        "color": "#1B1D4D",
        "fontFamily": "MulishRegular",
        "fontSize": 16,
      }
    }
  >
    Enter new password and confirm.
  </Text>
  <View
    style={
      {
        "gap": 12.2728,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "white",
            "borderRadius": 10,
            "height": "auto",
            "padding": 10,
            "width": "100%",
          },
          {
            "elevation": 20,
            "shadowColor": "#16196670",
            "shadowOffset": {
              "height": 6,
              "width": 0,
            },
            "shadowOpacity": 0.08,
            "shadowRadius": 16,
          },
          [
            {
              "alignItems": "center",
              "borderColor": "white",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 14,
            },
            undefined,
            false,
          ],
        ]
      }
      testID="universal-container"
    >
      <TextInput
        keyboardType="default"
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Enter new password"
        placeholderTextColor="#868698"
        secureTextEntry={true}
        style={
          [
            {
              "color": "white",
              "fontFamily": "MulishRegular",
            },
            {
              "color": "#1B1D4D",
              "marginRight": 10,
              "maxWidth": "93%",
              "width": "100%",
            },
            undefined,
            {
              "maxWidth": "100%",
            },
          ]
        }
        testID="passwordtest"
        value=""
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={10}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "display": "none",
          }
        }
        testID="input-icon"
      >
        <Text />
      </View>
    </View>
    <View
      style={
        [
          {
            "backgroundColor": "white",
            "borderRadius": 10,
            "height": "auto",
            "padding": 10,
            "width": "100%",
          },
          {
            "elevation": 20,
            "shadowColor": "#16196670",
            "shadowOffset": {
              "height": 6,
              "width": 0,
            },
            "shadowOpacity": 0.08,
            "shadowRadius": 16,
          },
          [
            {
              "alignItems": "center",
              "borderColor": "white",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 14,
            },
            undefined,
            false,
          ],
        ]
      }
      testID="universal-container"
    >
      <TextInput
        keyboardType="default"
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Confirm your password"
        placeholderTextColor="#868698"
        secureTextEntry={true}
        style={
          [
            {
              "color": "white",
              "fontFamily": "MulishRegular",
            },
            {
              "color": "#1B1D4D",
              "marginRight": 10,
              "maxWidth": "93%",
              "width": "100%",
            },
            undefined,
            {
              "maxWidth": "100%",
            },
          ]
        }
        testID="passwordtest"
        value=""
      />
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={10}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "display": "none",
          }
        }
        testID="input-icon"
      >
        <Text />
      </View>
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
        "width": "100%",
      }
    }
  >
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        {
          "colors": [
            4288142079,
            4279654301,
          ],
          "endPoint": [
            1,
            0.5,
          ],
          "locations": undefined,
          "startPoint": [
            0,
            0.5,
          ],
        }
      }
      style={
        [
          {
            "borderRadius": 10,
            "padding": 15,
          },
          false,
          false,
        ]
      }
    >
      <Text
        style={
          [
            {
              "fontFamily": "MulishSemiBold",
              "fontSize": 16,
              "textAlign": "center",
            },
            {
              "color": "white",
            },
            false,
            false,
          ]
        }
      >
        Change password
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
</View>
`;
