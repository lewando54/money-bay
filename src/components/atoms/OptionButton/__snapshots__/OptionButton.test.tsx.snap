// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptionButton should render correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "flex-start",
      "backgroundColor": "white",
      "borderRadius": 10,
      "elevation": 20,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 8,
      "shadowColor": "#16196670",
      "shadowOffset": {
        "height": 6,
        "width": 0,
      },
      "shadowOpacity": 0.08,
      "shadowRadius": 16,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1B1D4D",
          "fontFamily": "MulishRegular",
          "fontSize": 14,
        },
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishSemiBold",
            "fontSize": 16,
          },
          false,
          false,
        ],
      ]
    }
  >
    USD
  </Text>
</View>
`;

exports[`OptionButton should render correctly when chosen option is enabled 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "flex-start",
      "backgroundColor": "#1B1D4D",
      "borderRadius": 10,
      "elevation": 20,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 8,
      "shadowColor": "#16196670",
      "shadowOffset": {
        "height": 6,
        "width": 0,
      },
      "shadowOpacity": 0.08,
      "shadowRadius": 16,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1B1D4D",
          "fontFamily": "MulishRegular",
          "fontSize": 14,
        },
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishSemiBold",
            "fontSize": 16,
          },
          false,
          {
            "color": "white",
          },
        ],
      ]
    }
  >
    USD
  </Text>
</View>
`;

exports[`OptionButton should render large variant 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "flex-start",
      "backgroundColor": "white",
      "borderRadius": 10,
      "elevation": 20,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 8,
      "shadowColor": "#16196670",
      "shadowOffset": {
        "height": 6,
        "width": 0,
      },
      "shadowOpacity": 0.08,
      "shadowRadius": 16,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1B1D4D",
          "fontFamily": "MulishRegular",
          "fontSize": 14,
        },
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishSemiBold",
            "fontSize": 16,
          },
          false,
          false,
        ],
      ]
    }
  >
    USD
  </Text>
</View>
`;

exports[`OptionButton should render normal variant 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "flex-start",
      "backgroundColor": "white",
      "borderRadius": 10,
      "elevation": 20,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 8,
      "shadowColor": "#16196670",
      "shadowOffset": {
        "height": 6,
        "width": 0,
      },
      "shadowOpacity": 0.08,
      "shadowRadius": 16,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "#1B1D4D",
          "fontFamily": "MulishRegular",
          "fontSize": 14,
        },
        [
          {
            "color": "#1B1D4D",
            "fontFamily": "MulishSemiBold",
            "fontSize": 16,
          },
          {
            "fontFamily": "MulishRegular",
          },
          false,
        ],
      ]
    }
  >
    USD
  </Text>
</View>
`;
